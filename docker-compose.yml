version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: fadi
      POSTGRES_PASSWORD: fadi
      POSTGRES_DB: DB_Mastodon
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - mastodon-network

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6  # Version compatible avec Kafka 2.8.x
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - mastodon-network

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1  # Kafka version 2.8.1 compatible avec Spark
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Pour accÃ©der au socket Docker
    networks:
      - mastodon-network

  jupyter:
    image : jupyter/pyspark-notebook:spark-3.1.2
    build: .
    container_name: jupyter
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/work
    environment:
      JUPYTER_ENABLE_LAB: "yes"
    depends_on:
      - kafka
      - postgres
    command: >
      start-notebook.sh --NotebookApp.token='' --NotebookApp.password=''
    networks:
      - mastodon-network

volumes:
  postgres-data:
  zookeeper-data:
  kafka-data:

networks:
  mastodon-network:
    driver: bridge
